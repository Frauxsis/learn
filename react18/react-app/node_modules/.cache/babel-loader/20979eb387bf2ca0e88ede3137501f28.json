{"ast":null,"code":"var _jsxFileName = \"/Users/user/code/react18/react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport StudentList from \"./components/StudentList\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [stuData, setStuData] = useState([]);\n  /*\r\n  *   将写死的数据替换为从接口 http://localhost:1337/api/students\r\n  *       中加载的数据\r\n  *\r\n  *   组件初始化时需要向服务器发送请求来加载数据\r\n  * */\n\n  useEffect(() => {\n    // 在effect中加载数据\n    // fetch() 用来向服务器发送请求加载数据，是Ajax的升级版\n    // 它需要两个参数：1.请求地址 2.请求信息\n    fetch('http://localhost:1337/api/students').then(res => {\n      // response表示响应信息\n      // console.log(res);\n      return res.json(); // 该方法可以将响应的json直接转换为js对象\n    }).then(data => {\n      // 将加载到的数据设置到state中\n      setStuData(data.data);\n    }).catch(() => {});\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(StudentList, {\n      stus: stuData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"MOI8IxLFp9YRpDI9eETgMWZJ5vI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","StudentList","App","stuData","setStuData","fetch","then","res","json","data","catch"],"sources":["/Users/user/code/react18/react-app/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport StudentList from \"./components/StudentList\";\r\nimport './App.css';\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [stuData, setStuData] = useState([]);\r\n\r\n    /*\r\n    *   将写死的数据替换为从接口 http://localhost:1337/api/students\r\n    *       中加载的数据\r\n    *\r\n    *   组件初始化时需要向服务器发送请求来加载数据\r\n    * */\r\n    useEffect(() => {\r\n        // 在effect中加载数据\r\n        // fetch() 用来向服务器发送请求加载数据，是Ajax的升级版\r\n        // 它需要两个参数：1.请求地址 2.请求信息\r\n        fetch('http://localhost:1337/api/students')\r\n            .then((res) => {\r\n                // response表示响应信息\r\n                // console.log(res);\r\n\r\n                return res.json();// 该方法可以将响应的json直接转换为js对象\r\n            })\r\n            .then(data => {\r\n                // 将加载到的数据设置到state中\r\n                setStuData(data.data);\r\n            })\r\n            .catch(() => {\r\n            });\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <StudentList stus={stuData}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,WAAP;;;AAGA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEd,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;EAEA;AACJ;AACA;AACA;AACA;AACA;;EACID,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IACAM,KAAK,CAAC,oCAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAAS;MACX;MACA;MAEA,OAAOA,GAAG,CAACC,IAAJ,EAAP,CAJW,CAIO;IACrB,CANL,EAOKF,IAPL,CAOUG,IAAI,IAAI;MACV;MACAL,UAAU,CAACK,IAAI,CAACA,IAAN,CAAV;IACH,CAVL,EAWKC,KAXL,CAWW,MAAM,CACZ,CAZL;EAcH,CAlBQ,EAkBN,EAlBM,CAAT;EAoBA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,uBACI,QAAC,WAAD;MAAa,IAAI,EAAEP;IAAnB;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAnCD;;GAAMD,G;;KAAAA,G;AAqCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}