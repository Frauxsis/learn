{"ast":null,"code":"/* 该文件专门用于暴露一个store对象，整个应用只有一个store对象 */\n//引入createStore，专门用于创建redux中最为核心的store对象\nimport { legacy_createStore as createStore, applyMiddleware, combineReducers } from 'redux'; //引入为Count组件服务的reducer\n\nimport countReducer from './reducers/count'; //引入为Person组件服务的reducer\n\nimport personReducer from './reducers/person'; //引入redux-thunk，用于支持异步action\n\nimport thunk from 'redux-thunk';\nconst allReducer = combineReducers({\n  he: countReducer\n}); //暴露store\n\nexport default createStore(allReducer, applyMiddleware(thunk));","map":{"version":3,"names":["legacy_createStore","createStore","applyMiddleware","combineReducers","countReducer","personReducer","thunk","allReducer","he"],"sources":["/Users/user/code/redux_test/src/redux/store.js"],"sourcesContent":["/* 该文件专门用于暴露一个store对象，整个应用只有一个store对象 */\n\n//引入createStore，专门用于创建redux中最为核心的store对象\nimport { legacy_createStore as createStore, applyMiddleware,combineReducers } from 'redux';\n//引入为Count组件服务的reducer\nimport countReducer from './reducers/count';\n//引入为Person组件服务的reducer\nimport personReducer from './reducers/person';\n\n\n//引入redux-thunk，用于支持异步action\nimport thunk from 'redux-thunk';\n\nconst allReducer = combineReducers({\n   he:countReducer\n})\n\n//暴露store\nexport default createStore(allReducer, applyMiddleware(thunk));\n"],"mappings":"AAAA;AAEA;AACA,SAASA,kBAAkB,IAAIC,WAA/B,EAA4CC,eAA5C,EAA4DC,eAA5D,QAAmF,OAAnF,C,CACA;;AACA,OAAOC,YAAP,MAAyB,kBAAzB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mBAA1B,C,CAGA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,UAAU,GAAGJ,eAAe,CAAC;EAChCK,EAAE,EAACJ;AAD6B,CAAD,CAAlC,C,CAIA;;AACA,eAAeH,WAAW,CAACM,UAAD,EAAaL,eAAe,CAACI,KAAD,CAA5B,CAA1B"},"metadata":{},"sourceType":"module"}