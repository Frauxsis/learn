{"ast":null,"code":"// 引入Count的UI组件\nimport CountUI from '../../components/Count'; // 引入connect用于连接UI组件和redux\n\nimport { connect } from 'react-redux'; //a函数的返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value ===> a函数传递状态\n\nfunction a() {\n  return {\n    n: 900\n  };\n} //b函数的返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value ===> b函数传递操作状态的方法\n\n\nfunction b() {\n  return {\n    bbb: () => {}\n  };\n} //使用connect()() 创建并暴露一个Count的容器组件\n\n\nexport default connect(a, b)(CountUI);","map":{"version":3,"names":["CountUI","connect","a","n","b","bbb"],"sources":["/Users/user/code/redux_test/src/containers/Count/index.jsx"],"sourcesContent":["// 引入Count的UI组件\nimport CountUI from '../../components/Count'\n\n// 引入connect用于连接UI组件和redux\nimport { connect } from 'react-redux'\n\n//a函数的返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value ===> a函数传递状态\nfunction a() {\n return  {n:900}\n}\n//b函数的返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value ===> b函数传递操作状态的方法\nfunction b() {\n   return {bbb:()=>{}}\n}\n\n//使用connect()() 创建并暴露一个Count的容器组件\nexport default connect(a,b)(CountUI);\n\n"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,wBAApB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,CAAT,GAAa;EACZ,OAAQ;IAACC,CAAC,EAAC;EAAH,CAAR;AACA,C,CACD;;;AACA,SAASC,CAAT,GAAa;EACV,OAAO;IAACC,GAAG,EAAC,MAAI,CAAE;EAAX,CAAP;AACF,C,CAED;;;AACA,eAAeJ,OAAO,CAACC,CAAD,EAAGE,CAAH,CAAP,CAAaJ,OAAb,CAAf"},"metadata":{},"sourceType":"module"}