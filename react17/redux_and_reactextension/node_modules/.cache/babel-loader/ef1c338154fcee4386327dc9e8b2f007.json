{"ast":null,"code":"var _jsxFileName = \"/Users/user/code/redux_and_reactextension/src/components/3hooks/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //类式组件\n\n/* class Demo extends React.Component {\n\tstate = { count: 0 };\n\tmyRef = React.createRef();\n\n\tadd = () => {\n\t\tthis.setState((state) => ({ count: state.count + 1 }));\n\t};\n\tunmount = () => {\n\t\tReactDOM.unmountComponentAtNode(document.getElementById('root'));\n\t};\n\tshow = () => {\n\t\talert(this.myRef.current.value);\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.timer = setInterval(() => {\n\t\t\tthis.setState((state) => ({ count: state.count + 1 }));\n\t\t}, 1000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timer);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<input type=\"text\" ref={this.myRef} />\n\t\t\t\t<h1>当前求和为：{this.state.count}</h1>\n\t\t\t\t<button onClick={this.add}>点击加1</button>\n\t\t\t\t<button onClick={this.unmount}>卸载组件</button>\n\t\t\t\t<button onClick={this.show}>展示数据</button>\n\t\t\t</div>\n\t\t);\n\t}\n} */\n//函数式组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Demo() {\n  _s();\n\n  const [count, setCount] = React.useState(0);\n  const myRef = React.useRef();\n  React.useEffect(() => {\n    let timer = setInterval(() => {\n      setCount(count => count + 1);\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []); //加的回调\n\n  function add() {\n    // setCount(count + 1);//第一种写法\n    setCount(count => count + 1);\n  }\n\n  function unmount() {\n    ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: myRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\uFF1A\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"\\u70B9\\u51FB\\u52A01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: unmount,\n      children: \"\\u5378\\u8F7D\\u7EC4\\u4EF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: unmount,\n      children: \"\\u5378\\u8F7D\\u7EC4\\u4EF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Demo, \"w0KNyNtEDUQM6rYcyHug4bzJH/Q=\");\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","ReactDOM","Demo","count","setCount","useState","myRef","useRef","useEffect","timer","setInterval","clearInterval","add","unmount","unmountComponentAtNode","document","getElementById"],"sources":["/Users/user/code/redux_and_reactextension/src/components/3hooks/index.jsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//类式组件\n/* class Demo extends React.Component {\n\tstate = { count: 0 };\n\tmyRef = React.createRef();\n\n\tadd = () => {\n\t\tthis.setState((state) => ({ count: state.count + 1 }));\n\t};\n\tunmount = () => {\n\t\tReactDOM.unmountComponentAtNode(document.getElementById('root'));\n\t};\n\tshow = () => {\n\t\talert(this.myRef.current.value);\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.timer = setInterval(() => {\n\t\t\tthis.setState((state) => ({ count: state.count + 1 }));\n\t\t}, 1000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timer);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<input type=\"text\" ref={this.myRef} />\n\t\t\t\t<h1>当前求和为：{this.state.count}</h1>\n\t\t\t\t<button onClick={this.add}>点击加1</button>\n\t\t\t\t<button onClick={this.unmount}>卸载组件</button>\n\t\t\t\t<button onClick={this.show}>展示数据</button>\n\t\t\t</div>\n\t\t);\n\t}\n} */\n\n//函数式组件\nfunction Demo() {\n\tconst [count, setCount] = React.useState(0);\n\tconst myRef = React.useRef();\n\tReact.useEffect(() => {\n\t\tlet timer = setInterval(() => {\n\t\t\tsetCount((count) => count + 1);\n\t\t}, 1000);\n\t\treturn () => {\n\t\t\tclearInterval(timer);\n\t\t};\n\t}, []);\n\n\t//加的回调\n\tfunction add() {\n\t\t// setCount(count + 1);//第一种写法\n\t\tsetCount((count) => count + 1);\n\t}\n\tfunction unmount() {\n\t\tReactDOM.unmountComponentAtNode(document.getElementById('root'));\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<input type=\"text\" ref={myRef} />\n\t\t\t<h2>当前求和为：{count}</h2>\n\t\t\t<button onClick={add}>点击加1</button>{' '}\n\t\t\t<button onClick={unmount}>卸载组件</button>\n\t\t\t<button onClick={unmount}>卸载组件</button>\n\t\t</div>\n\t);\n}\n\nexport default Demo;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA,SAASC,IAAT,GAAgB;EAAA;;EACf,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAA1B;EACA,MAAMC,KAAK,GAAGN,KAAK,CAACO,MAAN,EAAd;EACAP,KAAK,CAACQ,SAAN,CAAgB,MAAM;IACrB,IAAIC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC7BN,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;IACA,CAFsB,EAEpB,IAFoB,CAAvB;IAGA,OAAO,MAAM;MACZQ,aAAa,CAACF,KAAD,CAAb;IACA,CAFD;EAGA,CAPD,EAOG,EAPH,EAHe,CAYf;;EACA,SAASG,GAAT,GAAe;IACd;IACAR,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;EACA;;EACD,SAASU,OAAT,GAAmB;IAClBZ,QAAQ,CAACa,sBAAT,CAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC;EACA;;EAED,oBACC;IAAA,wBACC;MAAO,IAAI,EAAC,MAAZ;MAAmB,GAAG,EAAEV;IAAxB;MAAA;MAAA;MAAA;IAAA,QADD,eAEC;MAAA,mDAAWH,KAAX;IAAA;MAAA;MAAA;MAAA;IAAA,QAFD,eAGC;MAAQ,OAAO,EAAES,GAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHD,EAGqC,GAHrC,eAIC;MAAQ,OAAO,EAAEC,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJD,eAKC;MAAQ,OAAO,EAAEA,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AASA;;GA9BQX,I;;KAAAA,I;AAgCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}